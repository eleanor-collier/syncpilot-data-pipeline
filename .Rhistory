library(tidyverse)
library(vroom)
transcripts_by_word <- vroom (paste0(get_data_here, 'transcripts_by_word.csv'))
UCR/UCR SNL/Research Projects/SyncDisclosures/Pilot/Analysis/data/processed/moment_to_moment/"
save_data_here <- "/Volumes/GoogleDrive/My Drive/UCR/UCR SNL/Research Projects/SyncDisclosures/Pilot/Analysis/processing_pipeline/get_prosody/data_for_ML/"
# Load data
get_data_here  <- "/Volumes/GoogleDrive/My Drive/UCR/UCR SNL/Research Projects/SyncDisclosures/Pilot/Analysis/data/processed/moment_to_moment/"
transcripts_by_word <- vroom (paste0(get_data_here, 'transcripts_by_word.csv'))
acoustic_features_by_time <- vroom(paste0(get_data_here, 'acoustic_features_by_time.csv'))
View(acoustic_features_by_time)
View(transcripts_by_word)
View(transcripts_by_word)
View(transcripts_by_word)
View(transcripts_by_word)
transcripts_by_word[is.na(transcripts_by_word)]
is.na(transcripts_by_word)
summary(is.na(transcripts_by_word))
View(transcripts_by_word)
View(transcripts_by_word)
View(transcripts_by_word)
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
)
View(transcripts_by_time)
seq(1, 5, by=0.01)
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
# Expand 'time' to include every 0.01 second between start and stop
group_by(ID, disclosure, text) %>%
complete(time = seq.int(
from=time[1],
to=time[2],
by=0.01
)) %>%
fill(text, .direction="down") %>%
ungroup()
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:10,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
# Expand 'time' to include every 0.01 second between start and stop
group_by(ID, disclosure, text) %>%
complete(time = seq.int(
from=time[1],
to=time[2],
by=0.01
)) %>%
fill(text, .direction="down") %>%
ungroup()
View(transcripts_by_time)
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:10,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
values_to = "time"
) #%>%
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:10,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel)
View(transcripts_by_time)
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:10,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Expand 'time' to include every 0.01 second between start and stop
group_by(ID, disclosure, text) %>%
distinct(time)
View(transcripts_by_time)
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Expand 'time' to include every 0.01 second between start and stop
group_by(ID, disclosure, text) %>%
distinct(time)
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Expand 'time' to include every 0.01 second between start and stop
group_by(ID, disclosure, text) %>%
distinct(time)
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Delete duplicate time rows
group_by(ID, disclosure) %>%
distinct(time) %>%
ungroup()
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Delete duplicate time rows
group_by(ID, disclosure) %>%
#distinct(time) %>%
ungroup()
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Delete duplicate time rows
group_by(ID, disclosure) %>%
distinct(time, .keep_all=T) %>%
ungroup()
# Expand 'time' to include every 0.01 second between start and stop
group_by(ID, disclosure, text) %>%
complete(time = seq.int(
from=time[1],
to=time[2],
by=0.01
)) %>%
fill(text, .direction="up") %>%
ungroup()
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Delete duplicate time rows
group_by(ID, disclosure) %>%
distinct(time, .keep_all=T) %>%
ungroup() %>%
# Expand 'time' to include every 0.01 second between start and stop
group_by(ID, disclosure, text) %>%
complete(time = seq.int(
from=time[1],
to=time[2],
by=0.01
)) %>%
fill(text, .direction="up") %>%
ungroup()
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Expand 'time' to include every 0.01 second between start and stop
group_by(ID, disclosure, text) %>%
complete(time = seq.int(
from=time[1],
to=time[2],
by=0.01
)) %>%
fill(text, .direction="up") %>%
ungroup() %>%
# Delete duplicate time rows
group_by(ID, disclosure) %>%
distinct(time, .keep_all=T) %>%
ungroup()
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Expand 'time' to include every 0.01 second between start and stop
group_by(ID, disclosure, text) %>%
complete(time = seq.int(
from=time[1],
to=time[2],
by=0.01
)) %>%
fill(text, .direction="down") %>%
ungroup() %>%
# Delete duplicate time rows
group_by(ID, disclosure) %>%
distinct(time, .keep_all=T) %>%
ungroup()
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Expand 'time' to include every 0.01 second between start and stop,
# and fill in text
group_by(ID, disclosure, text) %>%
complete(time = seq.int(
from=time[1],
to=time[2],
by=0.01
)) %>%
ungroup() %>%
# Create is_speaking column and label all rows as TRUE
mutate(is_speaking = TRUE)
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Expand 'time' to include every 0.01 second between start and stop,
# and fill in text
group_by(ID, disclosure, text) %>%
complete(time = seq.int(
from=time[1],
to=time[2],
by=0.01
)) %>%
ungroup() %>%
select(-text) %>%
# Create is_speaking column and label all rows as TRUE
mutate(is_speaking = TRUE)
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Expand 'time' to include every 0.01 second between start and stop
group_by(ID, disclosure, text) %>%
complete(time = seq.int(
from=time[1],
to=time[2],
by=0.01
)) %>%
ungroup() %>%
select(-text) %>%
# Create is_speaking column and label all rows as TRUE
mutate(is_speaking = TRUE) %>%
# Delete duplicate time rows
group_by(ID, disclosure) %>%
distinct(time, .keep_all=T) %>%
ungroup() %>%
# Expland 'time' to include all time points when the participant wasn't talking, and
summary(is.na(transcripts_by_time$text))
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Expand 'time' to include every 0.01 second between start and stop
group_by(ID, disclosure, text) %>%
complete(time = seq.int(
from=time[1],
to=time[2],
by=0.01
)) %>%
ungroup() %>%
select(-text) %>%
# Create is_speaking column and label all rows as TRUE
mutate(is_speaking = TRUE) %>%
# Delete duplicate time rows
group_by(ID, disclosure) %>%
distinct(time, .keep_all=T) %>%
ungroup() %>%
# Expland 'time' to include all time points when the participant wasn't talking, and
summary(is.na(transcripts_by_time$text))
#########################################################################################
# Make transcript data joinable to acoustic features data
transcripts_by_time <- transcripts_by_word[1:1000,] %>%
# Make a column called 'time' that includes start and stoptime for every word
pivot_longer(
cols = c(start_time, end_time),
names_to = "word_timelabel",
values_to = "time"
) %>%
select(-word_timelabel) %>%
# Expand 'time' to include every 0.01 second between start and stop
group_by(ID, disclosure, text) %>%
complete(time = seq.int(
from=time[1],
to=time[2],
by=0.01
)) %>%
ungroup() %>%
select(-text) %>%
# Create is_speaking column and label all rows as TRUE
mutate(is_speaking = TRUE) %>%
# Delete duplicate time rows
group_by(ID, disclosure) %>%
distinct(time, .keep_all=T) %>%
ungroup() #%>%
